name: goae
version: 0.2.0
inherits: wercker/nodejs@1.0.2
type : main
platform : ubuntu@12.04
description : golang
keywords:
  - golang
  - appengine
  - go
packages :
  - go_appengine@1.9.35
  - git
  - mercurial
  - bzr
  - unzip
script : |
  aesdk_version=1.9.35
  wget https://commondatastorage.googleapis.com/appengine-sdks/featured/go_appengine_sdk_linux_amd64-${aesdk_version}.zip
  unzip -d go_appengine_sdk_linux_amd64-${aesdk_version}.zip
  sh -c "find go_appengine -perm /u+r | xargs chmod a+r"
  sh -c "find go_appengine -perm /u+x | xargs chmod a+x"
  rm go_appengine_sdk_linux_amd64-${aesdk_version}.zip

  # Make actual go workspace dir structure
  mkdir -p "$HOME/go/{src,pkg,bin}"

  # Set GOPATH
  export GOPATH="$HOME/go"
  echo 'export GOPATH="$HOME/go"' | sudo tee -a /etc/profile

  export PATH="$PATH:$HOME/go/bin:$HOME/go_appengine"
  echo 'export PATH="$PATH/go/bin:$HOME/go_appengine"' | sudo tee -a /etc/profile

  goapp get -v golang.org/x/tools/cover

  cat /etc/profile

box-detect:
  priority : 900
  version :
  detect:
    - files:
      - .godir

default-build:
  python:
    priority : 50
    detect:
      - default: true
    text-to-append: |
      # Build definition
      build:
        # The steps that will be executed on build
        steps:
          - script:
              name: setup golang
              code: |-
                if test "${WERCKER_GIT_REPOSITORY+set}" == set; then mkdir -p "$GOPATH/src/$WERCKER_GIT_DOMAIN/$WERCKER_GIT_OWNER/$WERCKER_GIT_REPOSITORY"; else ln -s $WERCKER_SOURCE_DIR $GOPATH/src; fi
                if test "${WERCKER_GIT_REPOSITORY+set}" == set; then cp -R $WERCKER_SOURCE_DIR/* "$GOPATH/src/$WERCKER_GIT_DOMAIN/$WERCKER_GIT_OWNER/$WERCKER_GIT_REPOSITORY"; fi
                if test "${WERCKER_GIT_REPOSITORY+set}" == set; then export WERCKER_SOURCE_DIR="$GOPATH/src/$WERCKER_GIT_DOMAIN/$WERCKER_GIT_OWNER/$WERCKER_GIT_REPOSITORY"; fi
          - script:
              name: goapp get
              code: |
                cd $WERCKER_SOURCE_DIR
                goapp version
                goapp get ./...
          - script:
              name: goapp build
              code: |
                goapp build
          - script:
              name: goapp test
              code: |
                goapp test ./...
